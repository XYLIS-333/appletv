<section class="relative">
    <button class="px-8 py-2 bg-black toggle-button text-white fixed bottom-4 left-4 z-20">toggle</button>
    <div class="w-full bg-white h-[40px]"></div>
    <div class="w-full bg-neutral-500 sticky my-div z-[999] opacity-1  top-0 flex flex-col">
        <div class="  bg-neutral-900 nav-bar text-white  w-full">
            <ul class=" flex gap-4 items-center w-full justify-center py-4 ">
        <li>Home</li>    
        <li>About</li>    
        <li>Menu</li>    
        <li>Work</li>    
        </ul>
        </div>
        <div class=" context-bar flex  justify-between items-center px-2 py-2 bg-neutral-50">
            <div>
                <h2 class=" font-bold">GlasNu</h2>
            </div>
            <div class="flex gap-2 ">
                <button class=" px-8 py-2 rounded-md bg-black text-white">Apply</button>
                <button class=" px-8 py-2 rounded-md bg-black text-white">Explore</button>
            </div>
        </div>
    </div>
    <div class=" relative h-[600px] w-full bg-blue-400 min-h-[200px]  ">
        <div class="absolute bottom-4 right-4 w-20 h-20 video-controls cursor-pointer z-30">
            <svg class=" opacity-0 absolute top-1/2 translate-y-[-50%] left-1/2 translate-x-[-50%] play-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="#ffff" d="M8 17.175V6.825q0-.425.3-.713t.7-.287q.125 0 .263.037t.262.113l8.15 5.175q.225.15.338.375t.112.475t-.112.475t-.338.375l-8.15 5.175q-.125.075-.262.113T9 18.175q-.4 0-.7-.288t-.3-.712"/></svg>
    
            <svg class="opacity-100 absolute top-1/2 translate-y-[-50%] left-1/2 translate-x-[-50%] pause-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="#ffff" d="M14 18V6h3.5v12zm-7.5 0V6H10v12z"/></svg>
            <svg class=" pointer-events-none" viewBox="0 0 100 100">
			
                <circle id="progress-circle" stroke="#ffff" stroke-width="3" cx="50" cy="50" r="30" fill="none" pathLength="100"/>
                
              </svg>
           
        </div>
        <div>
            <video muted  class=" product-video w-[400px] object-cover" src="/bg-video/intro-video-new.mp4"></video>
        </div>

        
    </div>
    <div class="relative h-screen w-full bg-neutral-400 min-h-[200px] ">
        <div>
            <div class="relative bottom-4 left-4  w-20 h-20 section-video-controls cursor-pointer z-30">
                <svg class=" opacity-0 absolute top-1/2 translate-y-[-50%] left-1/2 translate-x-[-50%] section-play-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="#ffff" d="M8 17.175V6.825q0-.425.3-.713t.7-.287q.125 0 .263.037t.262.113l8.15 5.175q.225.15.338.375t.112.475t-.112.475t-.338.375l-8.15 5.175q-.125.075-.262.113T9 18.175q-.4 0-.7-.288t-.3-.712"/></svg>
        
                <svg class="opacity-100 absolute top-1/2 translate-y-[-50%] left-1/2 translate-x-[-50%] section-pause-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24"><path fill="#ffff" d="M14 18V6h3.5v12zm-7.5 0V6H10v12z"/></svg>
                <svg class=" pointer-events-none" viewBox="0 0 100 100">
                
                    <circle id="section-progress-circle" stroke="#ffff" stroke-width="3" cx="50" cy="50" r="30" fill="none" pathLength="100"/>
                    
                  </svg>
               
            </div>
            <div>
                <video muted loop autoplay class=" border-[12px] border-red-700 section-product-video w-[400px] object-cover" src="/bg-video/intro-video-new.mp4"></video>
            </div>
        </div>
    </div>
    <div class="h-[1896px] anim-wrapper doom-block-section relative  bg-red-400">
        <div class="sticky screen-wrapper doom-container top-0 h-screen w-full  p-32">
            <div class="z-20 relative ">
                <p class="anim-text-1 text-[70px] font-semibold text-white drop-shadow-sm translate-y-[300px] opacity-0">Text-1</p>
                <p class="anim-text-2 text-[70px] font-semibold text-white drop-shadow-sm absolute top-0 left-0 translate-y-[300px] opacity-0  ">Text-4 to the moon</p>
                <p class="anim-text-3 text-[70px] font-semibold text-white drop-shadow-sm absolute top-0 left-0 translate-y-[300px] opacity-0  ">Text-3 availiability.</p>
                <p class="anim-text-4 text-[70px] font-semibold text-white drop-shadow-sm absolute top-0 left-0 translate-y-[300px] opacity-0  ">Text-2 find a new appreciation.</p>
            
            </div>
            <div class=" absolute inset-0 z-10">
                <video muted loop autoplay class="w-full h-full object-cover" src="https://cdn.shopify.com/videos/c/o/v/9817eeb734f64e7598e09298b46f410f.mp4"></video>
            </div>
        </div>
    </div>
    <div class=" h-screen w-full bg-violet-400">
       
    </div>
</section>

<style>


html{
    --navbar-size: 0px;
    --navbar-hidden: 0;
}


.nav-bar{
    transition: all 825ms;
    transform: translateY(calc((100%)*var(--navbar-hidden) * -1));
}
.context-bar{
    transition: all 825ms;
    transform: translateY(calc(var(--navbar-size)*var(--navbar-hidden) * -1));
}


--global-navbar-height,
--global-navbar-visibility
    
	#progress-circle{
  stroke-dasharray: 100;
  stroke-dashoffset: 0;
  stroke-linecap: round;
  transform-origin: center;
  transform: rotate(-90deg);
  transition: stroke-dashoffset 0.3s linear;
	}


	#section-progress-circle{
  stroke-dasharray: 100;
  stroke-dashoffset: 0;
  stroke-linecap: round;
  transform-origin: center;
  transform: rotate(-90deg);
  transition: stroke-dashoffset 0.3s linear;
	}
</style>

<script>
//@ts-nocheck
import {gsap} from "gsap" 
import { ScrollTrigger } from 'gsap/ScrollTrigger';
gsap.registerPlugin(ScrollTrigger)

function initVideoControls(videoClass, playIconClass, pauseIconClass,icons_wrapper,progress_loader) {
    // Wait for DOM to be ready
    document.addEventListener('DOMContentLoaded', () => {
        
        
        const video = document.querySelector(videoClass);
        const playIcon = document.querySelector(playIconClass);
        const pauseIcon = document.querySelector(pauseIconClass);
        const controller = document.querySelector(icons_wrapper);
        const progressLoader = document.querySelector(progress_loader);
        
        

        if (!video || !playIcon || !pauseIcon || !controller) {
            console.warn('Video elements not found');
            return;
        }

        
        

        controller.addEventListener('click', () => {
            if (video.paused) {
                video.play();
                playIcon.style.opacity = "0";
                pauseIcon.style.opacity = "1";
            } else {
                video.pause();
                playIcon.style.opacity = "1";
                pauseIcon.style.opacity = "0";
            }
        });
        
        video.addEventListener('timeupdate', () => {
            // Calculate the current progress of the video (between 0 and 1)
            let duration = video.duration
			let val = video.currentTime/duration
			let rounded = Number(val.toFixed(2))*100;
			
			
			 progressLoader.style.strokeDashoffset = rounded;
			
			
			
			
            
            
        });

    });
}


initVideoControls('.product-video', '.play-icon', '.pause-icon','.video-controls','#progress-circle');
initVideoControls('.section-product-video', '.section-play-icon', '.section-pause-icon','.section-video-controls','#section-progress-circle');

let screenWrapper = document.querySelector(".anim-wrapper")
let scrollHeight = window.innerHeight*4;


screenWrapper.style.height = `${scrollHeight}px`





let tl = gsap.timeline({scrollTrigger:{
    trigger:".anim-wrapper",
    start:"top top",
    end:"bottom bottom",
    scrub:true
}})


tl.to('.anim-text-1',{y:0,opacity:1})
tl.to('.anim-text-1',{y:-100,opacity:0})
tl.to('.anim-text-2',{y:0,opacity:1})
tl.to('.anim-text-2',{y:-100,opacity:0})
tl.to('.anim-text-3',{y:0,opacity:1})
tl.to('.anim-text-3',{y:-100,opacity:0})
tl.to('.anim-text-4',{y:0,opacity:1})
tl.to('.anim-text-4',{y:-100,opacity:0})



let root = document.documentElement

function setHeight(){

let navbar = document.querySelector(".desktop-navbar-wrapper")

let height = navbar.offsetHeight
console.log(height);


root.style.setProperty('--global-navbar-height',`${height}px`)

}

setHeight()


function debounce(func){
let timer;
return function(event){
	if(timer) clearTimeout(timer);
	timer = setTimeout(()=>{func()},50,event)
}
}


window.addEventListener('resize',debounce(setHeight))



function getScrollDIrection(){


const scrollState = {
        dy: 0,
        y: 0
    };


let last = [window.scrollY,window.scrollX]
let current = last

function onscroll(){
last = current
current = [window.scrollX, window.scrollY]
scrollState.dy = current[1] - last[1];
scrollState.y = current[1];


console.log(scrollState.dy);

if(scrollState.y>window.innerHeight/2){
        if (scrollState.dy < 0) {
           
            root.style.setProperty('--global-navbar-visibility',`0`)
           console.log(root.style.getPropertyValue('--global-navbar-height'));
            
            }else {
            
            root.style.setProperty('--global-navbar-visibility',`1`)
            console.log(root.style.getPropertyValue('--global-navbar-height'));
        
           }

 } 

}




document.addEventListener('scroll', onscroll)



}




getScrollDIrection()

















</script>